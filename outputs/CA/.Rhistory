for (i in 1:dim(USArrests)[2]){
ct <- cor.test(USArrests[, i], USArrests[, i+1])
print(c(ct$statistic, ct$p.value))
if (i == dim(USArrests)[2]){
break
}
}
for (i in 1:dim(USArrests)[2]){
ct <- cor.test(USArrests[, i], USArrests[, i+1])
print(c(ct$statistic, ct$p.value))
if (i == dim(USArrests)[2])
break
}
for (i in 1:dim(USArrests)[2]){
ct <- cor.test(USArrests[, i], USArrests[, i+1])
print(c(ct$statistic, ct$p.value))
print(i)
if (i == dim(USArrests)[2])
break
}
dim(USArrests)
for (i in 1:dim(USArrests)[2]){
if (i == dim(USArrests)[2])
break
ct <- cor.test(USArrests[, i], USArrests[, i+1])
print(c(ct$statistic, ct$p.value))
print(i)
}
for (i in 1:dim(USArrests)[2]){
if (i == dim(USArrests)[2])
cor.test(USArrests[, i], USArrests[, -4])
ct <- cor.test(USArrests[, i], USArrests[, i+1])
print(c(ct$statistic, ct$p.value))
print(i)
}
for (i in 1:dim(USArrests)[2]){
if (i == dim(USArrests)[2])
cor.test(USArrests[, i], USArrests[, -i])
ct <- cor.test(USArrests[, i], USArrests[, i+1])
print(c(ct$statistic, ct$p.value))
print(i)
}
USArrests[, -1]
head(USArrests)
head(USArrests[, -1])
head(USArrests[, -4])
for (i in 1:dim(USArrests)[2]){
if (i == dim(USArrests)[2])
cor.test(USArrests[, i], USArrests[, 1])
ct <- cor.test(USArrests[, i], USArrests[, i+1])
print(c(ct$statistic, ct$p.value))
print(i)
}
for (i in 1:dim(USArrests)[2]){
if (i == dim(USArrests)[2])
break
ct <- cor.test(USArrests[, i], USArrests[, i+1])
print(c(ct$statistic, ct$p.value))
print(i)
}
for (i in 1:dim(USArrests)[2]){
if (i == dim(USArrests)[2]){
ct <- cor.test(USArrests[, i], USArrests[, 1])
print(c(ct$statistic, ct$p.value))
}
ct <- cor.test(USArrests[, i], USArrests[, i+1])
print(c(ct$statistic, ct$p.value))
print(i)
}
for (i in 1:dim(USArrests)[2]){
if (i == dim(USArrests)[2]){
ct <- cor.test(USArrests[, i], USArrests[, 1])
print(c(ct$statistic, ct$p.value))
} else {
ct <- cor.test(USArrests[, i], USArrests[, i+1])
print(c(ct$statistic, ct$p.value))
}
print(i)
}
install.packages('ctv')
library(ctv)
ctv('Econometrics')
obj <- ctv('Econometrics')
class(obj$packagelist)
head(obj$packagelist)
tail(obj$packagelist)
headtail <- tail(obj$packagelist)
class(headtail)
rm(headtail)
rm(obj)
available.views()
class(available.views())
available.views()[[1]]
available.views()[[1]][1]
available.views()[[1]][2]
available.views()[[1]][3]
available.views()[[1]][4]
available.packages()
help('available.packages')
apropos('package')
find.package('psych')
find.package('ctv')
package_version('psych')
package_version(psych)
packageVersion(psych)
packageVersion('psych')
packageDate('psych')
packageDate('ctv')
apropos('mean')
apropos('cor')
apropos('correl')
apropos('reg')
apropos('reggre')
apropos('regres')
apropos('lm')
apropos('pc')
apropos('pca')
apropos('CA')
apropos('media')
gender <- c('m', 'f', 'm', 'f', 'm')
barplot(table(gender))
salary <- c(12, 32, 34, 54, 56, 79, 98, 43, 54, 67)
min(salary)
max(salary)
salcat <- cut(salary, c(0, 50, 100))
barplot(salcat)
barplot(table(salcat))
tourdata
tourdata <- read.csv(file.choose())
head(tourdata)
trn <- tourdata[tourdata$year <= 2015, ]
dim(trn)
dim(tourdata)
names(trn)
xeq <- trn[c("total_income", "total_expenses")]
xtr <- trn[c("trade_balance", "exports", "imports", "gdp_cur_mp", "gdp_cst_mp")]
model1 <- ecm(trn$fta, xeq, xtr)
model1
library(ecm)
model1 <- ecm(trn$fta, xeq, xtr)
model1
summary(model1)
tst <- tourdata[tourdata$year >= 2015, ]
tst$model1Pred <- ecmpredict(model1, tst, tst$fta[1])
tst$model1Pred
plot(trn$fta, col = 'blue', type = 'b', ylim = c(min(tourdata$fta), max(tourdata$fta)))
par(mfrow = c(1, 3))
plot(trn$fta, col = 'blue', type = 'b', ylim = c(min(tourdata$fta), max(tourdata$fta)))
plot(1:length(trn$fta), trn$fta, col = 'blue', type = 'b', ylim = c(min(tourdata$fta), max(tourdata$fta)))
lines(17:24, tst$model1Pred, col = 'red', type = 'b', ylim = c(min(tourdata$fta), max(tourdata$fta)))
dim(trn)
dim(tourdata)
par(mfrow = c(1, 3))
plot(tourdata$fta, col = 'blue', type = 'b', ylim = c(min(tourdata$fta), max(tourdata$fta)))
plot(1:length(trn$fta), trn$fta, col = 'blue', type = 'b', ylim = c(min(tourdata$fta), max(tourdata$fta)))
plot(17:24, tst$model1Pred, col = 'red', type = 'b', ylim = c(min(tourdata$fta), max(tourdata$fta)))
plot(tourdata$fta, col = 'blue', type = 'b', ylim = c(min(tourdata$fta), max(tourdata$fta)))
# par(mfrow = c(1, 3))
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
plot(tourdata$fta, col = 'blue', type = 'b', ylim = c(min(tourdata$fta), max(tourdata$fta)))
plot(1:length(trn$fta), trn$fta, col = 'blue', type = 'b', ylim = c(min(tourdata$fta), max(tourdata$fta)))
plot(17:24, tst$model1Pred, col = 'red', type = 'b', ylim = c(min(tourdata$fta), max(tourdata$fta)))
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
plot(tourdata$fta, col = 'blue', type = 'b', ylim = c(min(tourdata$fta), max(tourdata$fta)))
plot(1:length(trn$fta), trn$fta, col = 'blue', type = 'b', ylim = c(min(tourdata$fta), max(tourdata$fta)))
plot(17:24, tst$model1Pred, col = 'red', type = 'b', ylim = c(min(trn$fta), max(trn$fta)))
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
plot(tourdata$fta, col = 'blue', type = 'b', ylim = c(min(tourdata$fta), max(tourdata$fta)))
plot(1:length(trn$fta), trn$fta, col = 'blue', type = 'b', ylim = c(min(tourdata$fta), max(tourdata$fta)))
plot(17:24, tst$model1Pred, col = 'red', type = 'b', ylim = c(min(tst$fta), max(tst$fta)))
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
plot(tourdata$fta, col = 'blue', type = 'b', ylim = c(min(tourdata$fta), max(tourdata$fta)))
plot(1:length(trn$fta), trn$fta, col = 'blue', type = 'b', ylim = c(min(tourdata$fta), max(tourdata$fta)))
plot(17:24, tst$model1Pred, col = 'red', type = 'b')
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
plot(tourdata$fta, col = 'blue', type = 'b', ylim = c(min(tourdata$fta), max(tourdata$fta)))
plot(1:length(trn$fta), trn$fta, col = 'blue', type = 'b', ylim = c(min(tourdata$fta), max(tourdata$fta)))
plot(17:24, tst$model1Pred, col = 'red', type = 'b', ylim = c(min(tst$fta), max(tst$fta)))
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
plot(tourdata$fta, col = 'blue', type = 'b', ylim = c(min(tourdata$fta), max(tourdata$fta)), xlab = 'FTA')
plot(1:length(trn$fta), trn$fta, col = 'blue', type = 'b', ylim = c(min(tourdata$fta), max(tourdata$fta)), xlab = 'FTA', ylab = 'Index')
plot(17:24, tst$model1Pred, col = 'red', type = 'b', ylim = c(min(tst$fta), max(tst$fta)), xlab = 'FTA', ylab = 'Index')
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
plot(tourdata$fta, col = 'blue', type = 'b', ylim = c(min(tourdata$fta), max(tourdata$fta)), ylab = 'FTA')
plot(1:length(trn$fta), trn$fta, col = 'blue', type = 'b', ylim = c(min(tourdata$fta), max(tourdata$fta)), ylab = 'FTA', xlab = 'Index')
plot(17:24, tst$model1Pred, col = 'red', type = 'b', ylim = c(min(tst$fta), max(tst$fta)), ylab = 'FTA', xlab = 'Index')
ts.plot(tourdata)
tourtsdf <- ts(tourdata, start = c(2000))
# ts.plot(tourdata)
plot(tourtsdf)
# ts.plot(tourdata)
plot(tourtsdf, las = 1)
# ts.plot(tourdata)
plot(tourtsdf, las = 1)
# ts.plot(tourdata)
plot(tourtsdf, las = 1)
# ts.plot(tourdata)
plot(tourtsdf, las = 1)
# ts.plot(tourdata)
plot(tourtsdf, type = 'b', las = 1)
# ts.plot(tourdata)
plot(tourtsdf, type = 'b', las = 1, col = 'blue')
names(tourdata)
# ts.plot(tourdata)
plot(tourtsdf, type = 'b', las = 1, col = 'blue', mar = c(8, 8, 1, 1))
# ts.plot(tourdata)
plot(tourtsdf, type = 'b', las = 1, col = 'blue', mar = c4, 4, 1, 1))
# ts.plot(tourdata)
plot(tourtsdf, type = 'b', las = 1, col = 'blue', mar = c(4, 4, 1, 1))
# ts.plot(tourdata)
plot(tourtsdf, type = 'b', las = 1, col = 'blue', mar = c(4, 4, 4, 4))
# ts.plot(tourdata)
plot(tourtsdf, type = 'b', las = 1, col = 'blue', mar = c(4, 4, 2, 2))
# ts.plot(tourdata)
plot(tourtsdf, type = 'b', las = 1, col = 'blue', mar = c(4, 4, 1, 1))
# ts.plot(tourdata)
plot(tourtsdf, type = 'b', las = 1, col = 'blue', mar = c(2, 2, 1, 1))
# ts.plot(tourdata)
plot(tourtsdf, type = 'b', las = 1, col = 'blue', mar = c(1, 1, 1, 1))
# ts.plot(tourdata)
plot(tourtsdf, type = 'b', las = 1, col = 'blue', mar = c(1, 1, 0.5, 0.5))
# ts.plot(tourdata)
plot(tourtsdf, type = 'b', las = 1, col = 'blue', mar = c(0.5, 0.5, 0.1, 0.1))
# ts.plot(tourdata)
plot(tourtsdf, type = 'b', las = 1, col = 'blue', mar = c(0.1, 0.1, 0.1, 0.1))
# ts.plot(tourdata)
plot(tourtsdf, type = 'b', las = 1, col = 'blue', mar = c(0.01, 0.01, 0.1, 0.1))
# ts.plot(tourdata)
plot(tourtsdf, type = 'b', las = 1, col = 'blue')
# ts.plot(tourdata)
par(mar = c(4, 4, 0.1, 0.1))
plot(tourtsdf, type = 'b', las = 1, col = 'blue')
# ts.plot(tourdata)
par(mar = c(4, 4, 0.1, 0.1))
plot(tourtsdf, type = 'b', las = 1, col = 'blue')
# ts.plot(tourdata)
par(mar = c(0.1, 0.1, 0.1, 0.1))
plot(tourtsdf, type = 'b', las = 1, col = 'blue')
path <- readline() #D:\\Research\\PAPERS\\big data\\social-environmental
bigse <- read.csv(file.choose())
names(bigse)
bigseabs <- bigse["Abstract"]
length(t(bigseabs)) # 62
bigsecorp <- VCorpus((VectorSource(t(bigseabs))))
# https://www.clres.com/ca/pdepca01a.html
library(tm) #load text mining library
bigsecorp <- VCorpus((VectorSource(t(bigseabs))))
abstracts_corp <- tm_map(bigsecorp, stripWhitespace)
abstracts_corp <- tm_map(abstracts_corp, removePunctuation)
abstracts_corp <- tm_map(abstracts_corp, content_transformer(tolower))
abstracts_corp <- tm_map(abstracts_corp, removeWords, stopwords("english"))
abstracts_corp <- tm_map(abstracts_corp, removeNumbers)
adtm <- DocumentTermMatrix(abstracts_corp)
tm::inspect(adtm[10:16, ] )
dim(adtm) # [1]   62 2644
adtm$dimnames
bigse_ <- adtm[, -c(1:10)]
dim(bigse_) # [1]   62 2634
bigsedf <- data.frame(as.matrix(bigse_), stringsAsFactors=FALSE)
bigsedfdense <- data.frame(as.matrix(removeSparseTerms(bigse_, 0.90)))
dim(bigsedfdense) #200
names(bigsedfdense)
bigsefinaldf <- subset(bigsedfdense, select = -c(across, addition, additional, address, aims, also,
among, areas, article, articles, aspects, authors,
available, based, better, bias, biases, can, conclusions,
construct, continuous, control, criteria, current,
detailed, develop, developed, development, develops, different,
especially, even, existing, explore, factors, features, finally,
findings, first, follows, furthermore, future, general, high,
highlight, however, human, identify, impact, implementation,
implemented, important, improve, improving, including,
increasing, initial, issue, key, limited, mainly,
many, may, method, methods, model, moreover, multiple, need,
needed, new, novel, number, one, order, paper, potential, practical,
problems, process, processing, projects, propose, proposed,
protection, provide, public, purpose, quality, reference, related,
reporting, required, results, review, second, set, several, show,
shows, significant, significantly, smart, solve, standards, studies, study, theory,
third, three, time, two, understanding, use, used, using, various, verification, ways, well,
whole, will, within, work, year))
length(names(bigsefinaldf)) # 75
bigsefadf <- subset(bigsedfdense, select = c(environmental, technical, cloud, storage,
big, data, financial, blockchain, sustainability,
obligatory, social, technology, information, system,
transparency, accountability, methodology, auditing,
machine, learning, governance, network, management))
bigsefadf <- subset(bigsedfdense, select = c(environmental, technical, cloud, storage,
big, data, financial, blockchain, sustainability,
obligatory, social, technology, information, system,
transparency, accountability, methodology, auditing,
machine, learning, governance, network, management))
bigsefadf <- subset(bigsedfdense, select = c(environmental, cloud, storage,
big, data, financial, blockchain, sustainability,
obligatory, social, technology, information, system,
transparency, accountability, methodology, auditing,
machine, learning, governance, network, management))
bigsefadf <- subset(bigsedfdense, select = c(environmental, cloud, storage,
big, data, financial, blockchain, sustainability,
social, technology, information, system,
transparency, accountability, methodology, auditing,
machine, learning, governance, network, management))
library(psy)
library(psych)
fafit <- fa(bigsefadf, 2)
structure.diagram(fafit)
write.csv(loadings(fafit), 'D:/Research/PAPERS/big data/social-environmental-30 April 2024/analysis/2fa-loadings.csv')
write.csv(fafit$r.scores, 'D:/Research/PAPERS/big data/social-environmental-30 April 2024/analysis/2fa-r-scores.csv')
citation()
library(tm) #load text mining library
path <- readline() #D:\Research\PAPERS\WORKING\marketing\ARVR\data
# D:\Research\PAPERS\big data\social-environmental-30 April 2024\data\for-analysis
pathch <- gsub('\\\\','//', path)
setwd(path)
getwd()
arvrfile <- read.csv("main.csv")
names(arvrfile)
arvrabs <- arvrfile["Abstract"]
length(t(arvrabs)) # 62
arvrcorp <- VCorpus((VectorSource(t(arvrabs))))
abstracts_corp <- tm_map(arvrcorp, stripWhitespace)
arvrfile <- read.csv("main.csv")
names(arvrfile)
arvrabs <- arvrfile["Abstract"]
length(t(arvrabs)) # 168
arvrcorp <- VCorpus((VectorSource(t(arvrabs))))
abstracts_corp <- tm_map(arvrcorp, stripWhitespace)
abstracts_corp <- tm_map(abstracts_corp, removePunctuation)
abstracts_corp <- tm_map(abstracts_corp, content_transformer(tolower))
abstracts_corp <- tm_map(abstracts_corp, removeWords, stopwords("english"))
abstracts_corp <- tm_map(abstracts_corp, removeNumbers)
path <- readline() # D:\Research\PAPERS\WORKING\marketing\ARVR
pathch <- gsub('\\\\','//', path)
setwd(path)
getwd()
dir.create('outputs')
pathch <- file.path(path, 'outputs')
setwd(pathch)
getwd()
write.csv(summary(abstracts_corp), 'corpus-summary.csv')
adtm <- DocumentTermMatrix(abstracts_corp)
tm::inspect(adtm[10:16, ] )
dim(adtm) # [1]   62 2644
adtm$dimnames
arvr_ <- adtm[, -c(1:25)]
dim(bigse_) # [1]   62 2634
dim(arvr_) # [1]   62 2634
arvrdf <- data.frame(as.matrix(arvr_), stringsAsFactors=FALSE)
arvrdfdense <- data.frame(as.matrix(removeSparseTerms(arvrdf, 0.90)))
arvrdfdense <- data.frame(as.matrix(removeSparseTerms(arvr_, 0.90)))
dim(arvrdfdense) #200
names(arvrdfdense)
arvrdfdense <- data.frame(as.matrix(removeSparseTerms(arvr_, 0.95)))
dim(arvrdfdense) #[1] 168 165
names(arvrdfdense)
arvrdfdense <- data.frame(as.matrix(removeSparseTerms(arvr_, 0.85)))
dim(arvrdfdense) #[1] 168 165
names(arvrdfdense)
arvrdfdense <- data.frame(as.matrix(removeSparseTerms(arvr_, 0.99)))
dim(arvrdfdense) #[1] 168 165
arvrdfdense <- data.frame(as.matrix(removeSparseTerms(arvr_, 0.95)))
dim(arvrdfdense) #[1] 168 165
names(arvrdfdense)
write.csv(arvrdfdense, file.path(pathch, 'tm-data.csv'))
arvrdf <- subset(arvrdfdense, select = c(marketing, innovation, agmented, reality, virtual))
arvrdf <- subset(arvrdfdense, select = c(marketing, innovation, augmented, reality, virtual))
length(names(arvrdf)) # 75
write.csv(arvrdf, file.path(pathch, 'df-for-analysis.csv'))
library(FactoMineR)
fit <- CA(data.frame(arvrdf))
names(arvrdfdense)
length(names(arvrdfdense))
arvrdf <- subset(arvrdfdense, select = c(marketing, innovation, augmented, reality, virtual,
advertising, algorithms, applications, artificial, intelligence,
business, collaborative, community, cultural, database, databases,
decision, science, scientific, digital, distributed, computing, ecommerce,
economic, education, educational, electronic, engineering, environment,
environment, environments, geographic, information, systems, health,
infrastructure, innovation, innovative, internet, machine, learning,
management, market, media, medical, methodology, methods, mobile, mobility,
model, modeling, modelling, models, monitoring, motion, multimedia,
navigation, natural, nature, neural, network, networks, online, operation,
quality, real, sales, consumer, satisfaction, spatial, strategy, strategies,
technological, technologies, technology, tourism, tourist, tourists, ))
arvrdf <- subset(arvrdfdense, select = c(marketing, innovation, augmented, reality, virtual,
advertising, algorithms, applications, artificial, intelligence,
business, collaborative, community, cultural, database, databases,
decision, science, scientific, digital, distributed, computing, ecommerce,
economic, education, educational, electronic, engineering, environment,
environment, environments, geographic, information, systems, health,
infrastructure, innovation, innovative, internet, machine, learning,
management, market, media, medical, methodology, methods, mobile, mobility,
model, modeling, modelling, models, monitoring, motion, multimedia,
navigation, natural, nature, neural, network, networks, online, operation,
quality, real, sales, consumer, satisfaction, spatial, strategy, strategies,
technological, technologies, technology, tourism, tourist, tourists))
length(names(arvrdf)) # 75
write.csv(arvrdf, file.path(pathch, 'df-for-analysis-long.csv'))
fit <- CA(data.frame(arvrdf))
pathch <- file.path(path, 'CA')
pathch
pathch <- gsub('\\\\','//', path)
pathch
pathch <- file.path(pathch, 'CA')
pathch
pathca <- file.path(pathch, 'CA')
pathca
path <- readline() # D:\Research\PAPERS\WORKING\marketing\ARVR
pathca <- file.path(path, 'CA')
pathca
pathch <- gsub('\\\\','//', path)
pathch
pathca <- file.path(pathch, 'CA')
pathca
setwd(pathca)
getwd()
setwd(pathca)
getwd()
setwd(pathca)
getwd(..)
getwd(/..)
getwd(//..)
getwd('//..')
getwd('..')
path <- readline()
pathch <- gsub('\\\\','//', path)
pathch
pathca <- gsub('\\\\','//', path)
setwd(pathca)
getwd()
write.csv(fit$row$coord, file.path(pathca, 'row-coord.csv'))
write.csv(fit$row$cos2, file.path(pathca, 'row-cos2.csv'))
write.csv(fit$row$contrib, file.path(pathca, 'row-contrib.csv'))
write.csv(fit$row$inertia, file.path(pathca, 'row-inertia.csv'))
write.csv(fit$col$coord, file.path(pathca, 'col-coord.csv'))
write.csv(fit$col$cos2, file.path(pathca, 'col-cos2.csv'))
write.csv(fit$col$contrib, file.path(pathca, 'col-contrib.csv'))
write.csv(fit$col$inertia, file.path(pathca, 'col-inertia.csv'))
plot.CA(fit, xlim = c(-2, 0), ylim = c(0, 1))
plot.CA(fit, xlim = c(-1.5, 0), ylim = c(0, 1))
plot.CA(fit, xlim = c(-1.25, 0), ylim = c(0, 1))
plot.CA(fit, xlim = c(-1.20, 0), ylim = c(0, 1))
plot.CA(fit, xlim = c(-0.75, 0), ylim = c(0, 1))
plot.CA(fit, xlim = c(-0.75, 0), ylim = c(0, 0.6))
plot.CA(fit, xlim = c(-1.25, -0.75), ylim = c(0, 0.6)) #q12
plot.CA(fit, xlim = c(-1.25, -0.75), ylim = c(0, 0.75)) #q12
plot.CA(fit, xlim = c(-1.10, 0), ylim = c(0, 0.6)) #q11
plot.CA(fit, xlim = c(-1.25, -0.75), ylim = c(0, 0.75)) #q12
plot.CA(fit, xlim = c(-1.25, 0), ylim = c(0, 0.6)) #q11
fit <- CA(data.frame(arvrdf))
plot.CA(fit, xlim = c(0, 1), ylim = c(-1, 0))
plot.CA(fit, xlim = c(1, 2), ylim = c(-1, 0))
plot.CA(fit, xlim = c(1, 1.5), ylim = c(-1, 0))
plot.CA(fit, xlim = c(0.5, 1.5), ylim = c(-1, 0))
plot.CA(fit, xlim = c(0, 1), ylim = c(0, 1)) #q31
plot.CA(fit, xlim = c(0, 1), ylim = c(2.75, 7.5))
plot.CA(fit, xlim = c(0, 1), ylim = c(2.75, 5))
plot.CA(fit, xlim = c(0, 1), ylim = c(3.05, 5))
fit <- CA(data.frame(arvrdf))
plot.CA(fit, xlim = c(-1.5, 0), ylim = c(0, 1.25))
plot.CA(fit, xlim = c(-1, 0), ylim = c(0, 1.25))
plot.CA(fit, xlim = c(-0.5, 0), ylim = c(0, 0.75))
plot.CA(fit, xlim = c(-1, 0), ylim = c(0, 0.75))
plot.CA(fit, xlim = c(-1, 0), ylim = c(0, -0.75))
fit <- CA(data.frame(arvrdf))
plot.CA(fit, xlim = c(-1, 0), ylim = c(0, -1)) #q11
plot.CA(fit, xlim = c(-1, 0), ylim = c(-1, 0)) #q11
plot.CA(fit, xlim = c(-0.5, 0), ylim = c(-0.75, 0)) #q11
plot.CA(fit, xlim = c(-0.35, 0), ylim = c(-0.6, 0)) #q11
plot.CA(fit, xlim = c(-0.3, 0), ylim = c(-0.6, 0)) #q11
plot.CA(fit, xlim = c(-0.3, 0), ylim = c(-0.2, 0)) #q11
plot.CA(fit, xlim = c(-0.3, 0), ylim = c(-0.175, 0)) #q11
plot.CA(fit, xlim = c(-0.2, 0), ylim = c(-0.16, 0)) #q11
plot.CA(fit, xlim = c(-0.2, 0), ylim = c(-0.6, 0)) #q12
plot.CA(fit, xlim = c(-0.2, 0), ylim = c(-0.6, -0.3)) #q12
fit <- CA(data.frame(arvrdf))
plot.CA(fit, xlim = c(0, 1), ylim = c(--1, 0)) #q12
plot.CA(fit, xlim = c(0, 1), ylim = c(-1.5, 0)) #q12
plot.CA(fit, xlim = c(0, 0.5), ylim = c(-0.75, 0)) #q12
plot.CA(fit, xlim = c(0, 1), ylim = c(-1, 0)) #q21
plot.CA(fit, xlim = c(0, 1), ylim = c(-2, 0)) #q21
plot.CA(fit, xlim = c(0, 1), ylim = c(-0.75, 0)) #q21
plot.CA(fit, xlim = c(0, 1), ylim = c(-0.75, 0)) #q21
plot.CA(fit, xlim = c(1, 2), ylim = c(-2, 0.75)) #q21
plot.CA(fit, xlim = c(0, 1), ylim = c(-0.75, 0)) #q21
plot.CA(fit, xlim = c(1, 2), ylim = c(-1, 0.75)) #q21
fit <- CA(data.frame(arvrdf))
plot.CA(fit, xlim = c(0, 1), ylim = c(0. 1)) #q21
plot.CA(fit, xlim = c(0, 1), ylim = c(0, 1)) #q21
plot.CA(fit, xlim = c(0, 1), ylim = c(3.75, 5)) #q21
plot.CA(fit, xlim = c(0.5, 1), ylim = c(3.75, 5)) #q21
plot.CA(fit, xlim = c(0.5, 1), ylim = c(0.5, 0.75)) #q21
fit <- CA(data.frame(arvrdf))
plot.CA(fit, xlim = c(0, 1), ylim = c(0, 1.25)) #q21
plot.CA(fit, xlim = c(0, -1), ylim = c(0, 1.25)) #q21
plot.CA(fit, xlim = c(-1, 0), ylim = c(0, 1.25)) #q21
plot.CA(fit, xlim = c(-0.5, 0), ylim = c(0, 0.5)) #q21
plot.CA(fit, xlim = c(-1, -0.5), ylim = c(0.5, 1.25)) #q21
plot.CA(fit, xlim = c(-1, -0.5), ylim = c(0.25, 1.25)) #q21
plot.CA(fit, xlim = c(-0.5, 0), ylim = c(0, 1.25)) #q21
desc_anal <- sapply(arvrdf, function(x) c(summary(x), type = class(x)))
write.csv(desc_anal, file = file.path(pathanal, 'summary-df.csv'))
write.csv(pathca, file = file.path(pathanal, 'summary-df.csv'))
write.csv(pathca, file = file.path(pathanal, 'summary-df.csv'))
write.csv(pathca, file = file.path(pathanal, 'summary-df.csv'))
write.csv(pathca, file = file.path(pathanal, 'summary-df.csv'))
write.csv(pathca, file = file.path(pathanal, 'summary-df.csv'))
names(bigsefinaldf)
write.csv(pathca, file = file.path(pathanal, 'summary-df.csv'))
write.csv(pathca, file = file.path(pathca, 'summary-df.csv'))
library(psych)
fafit <- fa(arvrdf, 2)
structure.diagram(fafit)
